generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type ProductReviews {
  author  String?
  content String?
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  description String
  discount    Int
  image       String
  name        String
  price       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  cartItem    CartItem[]

  @@map("products")
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  items     CartItem[]

  @@map("carts")
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  cartId    String  @db.ObjectId
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@map("cartitems")
}

model Buyer {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String
  phoneNumber   String
  address       String
  fulladress    String?
  city          String?
  state         String?
  postalcode    String?
  tracking      String    @default("To be Shipped")
  paymentStatus Boolean?
  cartId        String
  price         String
  tx_ref        String?
  paymentId     String?
  updatedAt     DateTime? @updatedAt
  delivered     Boolean?

  @@map("buyers")
}

model Highlight {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  date        String
  description String
  speaker     String
  title       String
  year        String
  image       String

  @@map("highlights")
}

model Speaker {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  bio        String
  image      String
  name       String
  occupation String
  title      String
  socials    Social[]

  @@map("speakers")
}

model Social {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  platform  String
  url       String
  Speaker   Speaker? @relation(fields: [speakerId], references: [id])
  speakerId String?  @db.ObjectId

  @@map("socials")
}

model subscribe {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique

  @@map("subcribers")
}

model admin {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  password String
  name     String

  @@map("Admins")
}
